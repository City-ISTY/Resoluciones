{
  "name": "MAIN_CONVOCATORIA",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "custom",
              "cronExpression": "0/10 * * * * *"
            }
          ]
        },
        "output": "fields",
        "fields": [
          "body",
          "from",
          "subject"
        ],
        "filters": {
          "custom": "isRead eq false and not(startswith(subject, 'RE:')) and contains(subject, 'revisar')"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftOutlookTrigger",
      "typeVersion": 1,
      "position": [
        -1792,
        160
      ],
      "id": "334e8ef4-8ee0-408e-9130-8bec51aa6d73",
      "name": "Microsoft Outlook Trigger",
      "alwaysOutputData": false,
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "aa1g0ggoDcXs6rTB",
          "name": "Microsoft Outlook account"
        }
      }
    },
    {
      "parameters": {
        "toRecipients": "={{ $('Microsoft Outlook Trigger').first().json.from.emailAddress.address }}",
        "subject": "=Revisión de Convocatoria - {{ $json.uuid }}",
        "bodyContent": "=Buenos días, se necesita su autorización para el agendamiento de la Convocatoria.\n\n-----PARÁMETROS PROPUESTOS-----\n{{ $json.message.replace(/^[\\r\\n]+|[\\r\\n]+$/g, '') }}\n----------\n\nPOR FAVOR RESPONDER:\n- Para continuar: Responda con \"APROBADO\" en el cuerpo del mensaje (No cambiar el asunto)\n- Para realizar nuevos cambios, indicar el punto a cambiar, y el cambio que solicita.\n \nEn caso de haber más cambios, le contestaré en un minuto para que se verifique nuevamente.\n\nMuchas gracias y que tenga una buena tarde.\nAtte. Bruno ",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -1248,
        160
      ],
      "id": "5b6573b5-c3d0-4521-b2e3-e2fc3813c2d6",
      "name": "Send a message",
      "webhookId": "ace6381b-ed18-445b-bc12-f00450c6438d",
      "alwaysOutputData": false,
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "aa1g0ggoDcXs6rTB",
          "name": "Microsoft Outlook account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1f399e97-0322-4e85-acbb-c3fffec204fd",
              "leftValue": "={{ $json.finded }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -640,
        160
      ],
      "id": "5af81c70-f6b8-4e3e-9fa1-be6d3909dad9",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": {
          "__rl": true,
          "value": "={{ $('ExtractLastMailResponse').first().json.id }}",
          "mode": "id"
        },
        "message": "=<div>\nListo, por favor verificar que los cambios se hayan realizado correctamente\n<br>\n-----PARÁMETROS PROPUESTOS-----<br>\n{{ $json.acta }}<br>\n----------\n<br><br>\nPOR FAVOR RESPONDER:\n<br>\n- Para continuar: Responda con \"APROBADO\" en el cuerpo del mensaje (No cambiar el asunto)<br>\n- Para realizar nuevos cambios, indicar el punto a cambiar, y el cambio que solicita.<br>\nEn caso de haber más cambios, le contestaré en 30 segundos para que se verifique nuevamente.<br>\nMuchas gracias y que tenga una buena tarde.<br>\nAtte. Bruno \n</div>",
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -1216,
        384
      ],
      "id": "22e4e2cb-a677-42bd-b725-527abc5feabd",
      "name": "Reply to a message",
      "webhookId": "425d96da-f199-4725-b573-3bfdbd624f35",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "aa1g0ggoDcXs6rTB",
          "name": "Microsoft Outlook account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Ordenar todos los mensajes por fecha (más reciente primero)\nconst sortedMessages = $input.all().sort((a, b) => {\n    const dateA = new Date(a.json.sentDateTime).getTime();\n    const dateB = new Date(b.json.sentDateTime).getTime();\n    return dateB - dateA;\n});\n\nif (sortedMessages.length === 0 || \n    (sortedMessages.length === 1 && Object.keys(sortedMessages[0].json).length === 0)) {\n    return [{\"finded\": false}];\n}else if(sortedMessages[0].json.from.emailAddress.address === \"city@isty.edu.ec\"){\n  return [{\"finded\": false}];\n}\n\nsortedMessages[0].json.finded = true;\nreturn sortedMessages[0];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -816,
        160
      ],
      "id": "9b9c762c-508e-4d84-b233-c7fa4a4afd35",
      "name": "ExtractLastMailResponse",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 10,
        "output": "fields",
        "fields": [
          "body",
          "bodyPreview",
          "createdDateTime",
          "receivedDateTime",
          "sentDateTime",
          "subject",
          "from"
        ],
        "filtersUI": {
          "values": {
            "filterBy": "search",
            "search": "={{ $('createUUID').first().json.uuid }}"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -1008,
        160
      ],
      "id": "cceca839-102a-4d85-9cf2-2b95224b67ea",
      "name": "Get many messages",
      "webhookId": "d8e3e4a8-34f0-4e5e-8836-6307a8ce30c1",
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1,
      "notesInFlow": false,
      "alwaysOutputData": true,
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "aa1g0ggoDcXs6rTB",
          "name": "Microsoft Outlook account"
        }
      },
      "notes": "Error sfdasdfasd"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -400,
        336
      ],
      "id": "142a9890-55f9-49d5-9ce4-b97847e9e58b",
      "name": "Wait",
      "webhookId": "370dc68f-704b-4296-bc9c-118522873b2c"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "messages": {
          "values": [
            {
              "content": "Eres un asistente administrativo inteligente especializado en la corrección de documentos",
              "role": "model"
            },
            {
              "content": "=Tu tarea es tomar un borrador original de un correo electrónico (Texto 1) y un segundo texto con solicitudes de cambio (Texto 2). Debes generar una nueva versión del Texto 1 que incorpore únicamente los cambios especificados en el Texto 2, manteniendo intacta toda la estructura y el contenido no mencionado. \n\n\n\n *Instrucciones Obligatorias a seguir \n\n 1. Lee el Texto 1 para entender la estructura y el contenido original. Lee el Texto 2 para identificar qué parámetros específicos deben ser modificados. \n\n 2. Solo modifica las secciones del Texto 1 que se indica en el Texto 2 \n\n 3. Conserva la estructura, sangrías y formato general del Texto 1 en tu respuesta, pero actualiza las numeraciones en caso de que se eliminen items, y no cambies el formato de separador entre el indice y el contenido | \n\n 4. Conserva lo que no se menciona: Si una sección o parámetro del Texto 1 (como \"Tipo de sesión\" o uno de los temas) no se menciona en el Texto 2, debe permanecer exactamente igual en el resultado final.  \n\n 5. Devuelve únicamente el texto 1 con las correciones que se piden en el texto 2, no des ninguna explicación, ni algun otro comentario. \n\n 6. Formato de salida: Texto plano, devuelve EXCLUSIVAMENTE el texto modificado, sin envolverlo entre comillas \n\n Tu tarea es tomar un borrador original de un correo electrónico (Texto 1) y un segundo texto con solicitudes de cambio (Texto 2). Debes generar una nueva versión del Texto 1 que incorpore únicamente los cambios especificados en el Texto 2, manteniendo intacta toda la estructura y el contenido no mencionado.  \n\n*ESTRUCTURA DEL TEXTO1 \n\n1| Fecha: *Aquí se indica la fecha de la reunión*\n\n2| Tipo: *Unicamente puede tomar los valores Ordinaria o Extraordinaria*\n\n3| Asistentes: *Participantes de la reunion* orden: *nombre_asistente - correo_electrónico - cargo_función* elm \"3.1| Andrés Tituana - alvaro.andres1996@hotmail.com - Representante de Estudiantes\"\n\n4| Temas a resolver: *Siempre va a ser una lista de maximo dos niveles* ejm \n\n\"4.1| Aprobación de la designacion de los miembros del comité de ética del instituto superior tecnológico yaruquí, quedando conformado de la siguiente manera\n\n      4.1.1| Msc. Alfredo Armando Rodríquez Guzman, representante del Rector.\n\n\"\n\n\n\n  *Instrucciones Obligatorias a seguir  \n1. Lee el Texto 1 para entender la estructura y el contenido original. Lee el Texto 2 para identificar qué parámetros específicos deben ser modificados.  \n2. Solo modifica las secciones del Texto 1 que se indica en el Texto 2  \n3. Conserva la estructura, sangrías y formato general del Texto 1 en tu respuesta, pero actualiza las numeraciones en caso de que se eliminen items. \n4. Conserva lo que no se menciona: Si una sección o parámetro del Texto 1 (como \"Tipo de sesión\" o uno de los temas) no se menciona en el Texto 2, debe permanecer exactamente igual en el resultado final.   \n6. Devuelve únicamente el texto 1 con las correciones que se piden en el texto 2, no des ninguna explicación, ni algun otro comentario.  \n7. Si se te pide algun cambio fuera del formato del texto 1 establecido, no lo añadas, unicamtente te pueden pedir cambios de fecha, asistentes, tipo sesión o temas a resolver.\n\n8. La numeracion es estricta: 1-fecha, 2-tipo, 3-Asistentes, 4-temas. Nunca cambies la numeracion de los temas generales.\n9. Formato de salida: Devuelme unicamente el texto 1 en texto plano con los cambios realizados.\n\n\nTEXTO 1 - PARÁMETROS ORIGINALES:\n```{{ $json.previous_act_formatted }}```\nTEXTO 2 - CAMBIOS SOLICITADOS:\n```{{ $json.changes }}```"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        0,
        400
      ],
      "id": "1170d867-fdd7-4a27-8676-5a562552f7ed",
      "name": "Realizar Cambios",
      "credentials": {
        "googlePalmApi": {
          "id": "0Zr2gDUeSEg2Xe6E",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const output_data = $('Information Extractor').first().json.output\n\nconst teamsDataMeeting = {}\n\nteamsDataMeeting.isOnlineMeeting = true\nteamsDataMeeting.onlineMeetingProvider = \"teamsForBusiness\"\n\n\n\n\nconst fechaInicio = new Date(output_data.fecha);\nif (fechaInicio.getMinutes() === 0) {\n    fechaInicio.setHours(13, 0, 0, 0);\n}\n\nconst fechaFin = new Date(fechaInicio);\nfechaFin.setHours(fechaInicio.getHours() + 2);\n\n\nteamsDataMeeting.start = {\n    \"dateTime\": fechaInicio,\n    \"timeZone\": \"America/Guayaquil\"\n}\n\nteamsDataMeeting.end = {\n    \"dateTime\": fechaFin,\n    \"timeZone\": \"America/Guayaquil\"\n}\nteamsDataMeeting.attendees = output_data.asistentes.map((at)=>{\n  return({ \"emailAddress\": {\"address\": at.mail, \"name\": at.name}, \n  \"type\": \"optional\"})\n})\n\noutput_data.body =teamsDataMeeting\n\n\n\n\n\nconst number_session = output_data.tipo.toLowerCase() == \"ordinaria\" ? \n    ('00' + (Number($input.first().json.ordinary_session_number)+1)).slice(-3) : \n    ('00' + (Number($input.first().json.extraordinary_session_number)+1)).slice(-3)\n  \n  //if \n  output_data.session_code = `OCS-S${output_data.tipo.toLowerCase() == \"ordinaria\" ? \"O\" : \"E\"}-${number_session}-${$today.toString().substring(0, 4)}`\n\nteamsDataMeeting.subject = `Sesion ${output_data.tipo} ${output_data.session_code}`\n\n\nreturn [{ \"output\": output_data }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        512,
        128
      ],
      "id": "fc4be84e-822b-415e-98ad-ea6cca4fc31f",
      "name": "formatDataForMeeting"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bc69d1fd-6c2d-45b7-89bb-c32f8afb7a71",
              "name": "acta",
              "value": "={{ $json.content.parts[0].textoReemplazado }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1392,
        384
      ],
      "id": "ca4ab88b-ef77-49d2-9d55-78c5651fb8cb",
      "name": "edit"
    },
    {
      "parameters": {
        "jsCode": "\nconst textoEstructurado = $input.first().json.content.parts[0].text\n\nconst textoReemplazado = textoEstructurado.replace(/(?<=\\n) +/g, match => '&nbsp;'.repeat(match.length)).replace(/\\n/g, '<br>');\n\n\n// Asigna el resultado a donde necesites\n$input.first().json.content.parts[0].textoReemplazado = textoReemplazado;\n\nreturn $input.all();\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1552,
        384
      ],
      "id": "dbcf6bc3-0492-4b07-93d0-474a68c197a4",
      "name": "formatText"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9a0677ba-f1ff-4092-801e-8e62a7359b97",
              "leftValue": "={{ $json.changes }}",
              "rightValue": "=/(h?[aá]\\s*p?\\s*r\\s*[oó]\\s*[bv]\\s*[aá]\\s*d\\s*[oó])/i",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -224,
        144
      ],
      "id": "cfd3aa66-d8da-4657-9690-6267e54c66fe",
      "name": "approved"
    },
    {
      "parameters": {
        "action": "generate",
        "dataPropertyName": "uuid"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -1440,
        160
      ],
      "id": "4dc898ee-ac6c-4c77-987f-11fdc7b78807",
      "name": "createUUID"
    },
    {
      "parameters": {
        "jsCode": "const htmlContent = $input.first().json.body.content || '';\n// Dividir por la etiqueta <hr> y tomar solo la primera parte\nconst html_split = htmlContent.split(/<hr[^>]*>/gi);\nconst user_suggest = html_split[0] || '';\nconst previous_act = html_split[1] || '';\nconst regex = /-----PARÁMETROS PROPUESTOS-----([\\s\\S]*?)----/;\nconst match = previous_act.match(regex);\nlet textoExtraido = match ? match[1].trim() : '';\n\nconst formatHtmlContent = (html) => {\n  return html\n    .replace(/<div[^>]*>/gi, '') // Eliminar apertura de divs\n    .replace(/<\\/div>/gi, '\\n')   // Convertir cierre de divs en saltos de línea\n    .replace(/<br\\s*\\/?>/gi, '\\n') // Convertir <br> en saltos de línea\n    .replace(/&nbsp;/g, ' ')      // Reemplazar espacios no breaking\n    .replace(/\\n{3,}/g, '\\n\\n')   // Reducir múltiples saltos de línea\n    .replace(/<[^>]*>/g, '');     // Eliminar el resto de etiquetas HTML\n};\n\nconst changes = formatHtmlContent(user_suggest);\nconst previous_act_formatted = formatHtmlContent(textoExtraido);\n\n\nreturn [{ json: { changes: changes, previous_act_formatted: previous_act_formatted, previous_act: previous_act } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -416,
        144
      ],
      "id": "0ba98d9b-04db-4a7c-8c5f-7f0ba957f25b",
      "name": "cleanHTML"
    },
    {
      "parameters": {
        "jsCode": "const htmlContent = $input.first().json.body.content || '';\n// Dividir por la etiqueta <hr> y tomar solo la primera parte\nconst html_split = htmlContent.split(/<hr[^>]*>/i);\nconst user_suggest = html_split[0] || '';\n\n\nconst formatHtmlContent = (html) => {\n  return html\n    .replace(/<div[^>]*>/gi, '') // Eliminar apertura de divs\n    .replace(/<\\/div>/gi, '\\n')   // Convertir cierre de divs en saltos de línea\n    .replace(/<br\\s*\\/?>/gi, '\\n') // Convertir <br> en saltos de línea\n    .replace(/&nbsp;/g, ' ')      // Reemplazar espacios no breaking\n    .replace(/\\n{3,}/g, '\\n\\n')   // Reducir múltiples saltos de línea\n    .replace(/<[^>]*>/g, '');     // Eliminar el resto de etiquetas HTML\n};\n\nconst message = formatHtmlContent(user_suggest);\n\n\nreturn [{ json: { message: message } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1616,
        160
      ],
      "id": "df1b4e5c-b372-4e12-a5ac-5f60ad252bca",
      "name": "cleanHTML1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.microsoft.com/v1.0/me/events",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftOAuth2Api",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('formatDataForMeeting').first().json.output.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        688,
        128
      ],
      "id": "2782aea3-023b-4a73-a62b-655680ff72dc",
      "name": "create_teams_meeting",
      "credentials": {
        "microsoftOAuth2Api": {
          "id": "Y5GP57FlaZyiBK8B",
          "name": "Microsoft account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Cx1WvsvMR6tSQYi5",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "meeting_type": "={{ $('formatDataForMeeting').first().json.output.tipo }}",
            "meeting_datetime_ISO8631": "={{ $json.start.dateTime }}",
            "convocation_date_ISO8631": "={{ $today }}",
            "session_code": "={{ $('formatDataForMeeting').first().json.output.session_code }}",
            "attendees": "={{ $('formatDataForMeeting').first().json.output.asistentes }}",
            "teams_link": "={{ $json.onlineMeeting.joinUrl }}",
            "meeting_topics": "={{ $('formatDataForMeeting').first().json.output.temas }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "meeting_type",
              "displayName": "meeting_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "meeting_datetime_ISO8631",
              "displayName": "meeting_datetime_ISO8631",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "convocation_date_ISO8631",
              "displayName": "convocation_date_ISO8631",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "session_code",
              "displayName": "session_code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "attendees",
              "displayName": "attendees",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            },
            {
              "id": "teams_link",
              "displayName": "teams_link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "meeting_topics",
              "displayName": "meeting_topics",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        880,
        128
      ],
      "id": "d2427be6-fe9a-4083-a55a-d37dbd3b4dcf",
      "name": "PDF_CONVOCATORIA"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "k6Op54V8oySaHd25",
          "mode": "list",
          "cachedResultName": "SAVE_METADATA"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "topics": "={{ $('formatDataForMeeting').first().json.output.temas }}",
            "meeting_datetime_ISO8631": "={{ $('create_teams_meeting').first().json.start.dateTime }}",
            "convocation_date_ISO8631": "={{ $today.setLocale('es').toISODate() }}",
            "meeting_type": "={{ $('formatDataForMeeting').first().json.output.tipo }}",
            "attendees": "={{ $('formatDataForMeeting').first().json.output.asistentes }}",
            "id_meeting": "={{ $('createUUID').first().json.uuid }}",
            "session_code": "={{ $('formatDataForMeeting').first().json.output.session_code }}",
            "meeting_url": "={{ $('create_teams_meeting').first().json.onlineMeeting.joinUrl }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "id_meeting",
              "displayName": "id_meeting",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "meeting_url",
              "displayName": "meeting_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "meeting_datetime_ISO8631",
              "displayName": "meeting_datetime_ISO8631",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "convocation_date_ISO8631",
              "displayName": "convocation_date_ISO8631",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "meeting_type",
              "displayName": "meeting_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "session_code",
              "displayName": "session_code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "attendees",
              "displayName": "attendees",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array",
              "removed": false
            },
            {
              "id": "topics",
              "displayName": "topics",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1088,
        128
      ],
      "id": "c8e01250-ac9e-4ed7-b4c3-b1ecb1399b69",
      "name": "SAVE_METADATA"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sessions_resolutions",
        "limit": 1,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        336,
        128
      ],
      "id": "3e8b2cb3-8c96-4b49-b622-f700acd61ff7",
      "name": "GET_RESOLUTIONS",
      "credentials": {
        "supabaseApi": {
          "id": "7iDL76ggTML8vg0b",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -16,
        112
      ],
      "id": "6fd77a2d-2585-4edb-8290-1821773e8032",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "0Zr2gDUeSEg2Xe6E",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "\n{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"fecha\": {\n\t\t\t\"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n\t\t\"tipo\":{\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"asistentes\":{\n\t\t\t\"type\": \"array\",\n\t\t\t\"items\": {\n\t\t\t\t\"type\": \"object\",\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"name\": {\n\t\t\t\t\t\t\"type\":\"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"mail\": {\n\t\t\t\t\t\t\"type\":\"string\",\n                        \"format\": \"email\"\n\t\t\t\t\t},\n\t\t\t\t\t\"role\": {\n\t\t\t\t\t\t\"type\":\"string\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"temas\":{\n\t\t\t\"type\": \"array\",\n\t\t\t\"items\": {\n\t\t\t\t\"type\": \"object\",\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"topic\":{\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"sub_topics\":{\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        32,
        -272
      ],
      "id": "76fe9cc3-03d1-4104-b637-1d8ab9acf60a",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -128,
        -240
      ],
      "id": "34e7cf6c-3603-4a52-8e6e-a8bf5e9aaa86",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "0Zr2gDUeSEg2Xe6E",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\n\nHere is the text\n{{ $json.previous_act_formatted }}",
        "hasOutputParser": true,
        "needsFallback": true,
        "messages": {
          "messageValues": [
            {
              "message": " You are an expert extraction algorithm. Only extract relevant information from the text. If you do not know the value of an attribute asked to extract, you may omit the attribute's value. You must always return valid JSON fenced by a markdown code block. Do not return any additional text.     System: You are an expert extraction algorithm.\\nOnly extract relevant information from the text.\\nIf you do not know the value of an attribute asked to extract, you may omit the attribute's value.\\nYou must always return valid JSON fenced by a markdown code block. Do not return any additional text.\\nYou must format your output as a JSON value that adheres to a given \"JSON Schema\" instance.\\n\\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\\n\\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}}}\\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\\n\\nYour output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -16,
        -96
      ],
      "id": "d0d80c8f-5844-4549-b036-5228d0aa8b2a",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        144,
        112
      ],
      "id": "a792637b-8e8d-4de2-b157-b4a77ffc8061",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "0Zr2gDUeSEg2Xe6E",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "toRecipients": "={{ $('formatDataForMeeting').first().json.output.asistentes.map(asistente => asistente.mail).join(', ') }}",
        "subject": "Convocatoria Sessión",
        "bodyContent": "=Buen día, se solicita su presencia en la sesión, por favor remitir el documento firmado.\n\nSe adjunta los links para la toma de asistencia y votos: \nASISTENCIA: \n{{ $('SAVE_METADATA').item.json.url_attendances }}\nVOTOS:\n{{ $('SAVE_METADATA').item.json.urt_votes }}",
        "additionalFields": {
          "attachments": {
            "attachments": [
              {
                "binaryPropertyName": "data"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        1440,
        128
      ],
      "id": "397f7fbd-67d2-40bf-b4e9-06782cc1170c",
      "name": "SEND_SECRETARY",
      "webhookId": "2e2dc7da-ecfe-405f-81dd-051e53bdc105",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "aa1g0ggoDcXs6rTB",
          "name": "Microsoft Outlook account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": " return{\n    json: $('PDF_CONVOCATORIA').first().json,\n    binary: $('PDF_CONVOCATORIA').first().binary\n  }\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1264,
        128
      ],
      "id": "bb744c60-60f3-4c26-a7e4-9efd0505b670",
      "name": "GET_BINARY"
    }
  ],
  "pinData": {
    "Microsoft Outlook Trigger": [
      {
        "json": {
          "@odata.etag": "W/\"CQAAABYAAACJa4iwinkBQoNKizXKF/TOAAAMDNQn\"",
          "id": "AAMkADU1MzgzMmM3LWVjYWItNGFkOS1hMjdhLTA4YTU2OWY2ZTJmMABGAAAAAAAQkpiSgVnUQZ6WjxACOvTnBwCJa4iwinkBQoNKizXKF-TOAAAAAAEMAACJa4iwinkBQoNKizXKF-TOAAAMDiIwAAA=",
          "subject": "revisar",
          "body": {
            "contentType": "html",
            "content": "<html><head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"><style type=\"text/css\" style=\"display:none\">\r\n<!--\r\np\r\n\t{margin-top:0;\r\n\tmargin-bottom:0}\r\n-->\r\n</style></head><body dir=\"ltr\"><div class=\"elementToProof\" style=\"font-family:Calibri,Helvetica,sans-serif; font-size:12pt; color:rgb(0,0,0)\">1| Fecha: 24 de septiembre del 2025 a las 4 de la tarde <br>2| Tipo: Ordinaria<br>3| Asistentes:<br>&nbsp;&nbsp; 3.1| Andrés Tituana - alvaro.andres1996@hotmail.com - Papá<br>&nbsp;&nbsp; 3.2| Jennifer Tituana - carloswringo@gmail.com - Hermana<br>&nbsp;&nbsp; 3.3&nbsp; Mister Wringo - mrwringo@hotmail.com - Hermano<br>4| Temas a resolver<br>&nbsp;&nbsp; 4.1| Aprobación de la designacion de los miembros del comité de ética del instituto superior tecnológico yaruquí, quedando conformado de la siguiente manera<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4.1.1| Msc. Alfredo Armando Rodríquez Guzman, representante del Rector, como presidente del comité.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4.1.2| Adm. Carlos Eduardo Esterlla Carrera, docente de la carrera de Gastronomía en calidad de delegado del personal docente.<br>&nbsp;&nbsp; 4.2| Aprobación de la aceptación de la renuncia presentada por el Ing. Kevin Javier Aguilar Cuichán, Jefe de la Unidad de Tecnologías de la información y Comunicación considerando lo siguiente:<br>    4.2.1 Que el docente llevaba mucho tiempo fuera de la institución<br>    4.2.2 Que la normativa autoriza a la institución a presentar la oportuna renuncia del Ingeniero.<br>4.3   Aprobación de cambio de fecha en la ceremonia de graduación del Calendario Académico PAO 2025-I en base al oficio ISTY-VA-DEPC-056-2025.</div><div class=\"elementToProof\" style=\"font-family:Calibri,Helvetica,sans-serif; font-size:12pt; color:rgb(0,0,0)\"><br></div></body></html>"
          },
          "from": {
            "emailAddress": {
              "name": "Andres Tituana",
              "address": "alvaro.andres1996@hotmail.com"
            }
          }
        }
      }
    ]
  },
  "connections": {
    "Microsoft Outlook Trigger": {
      "main": [
        [
          {
            "node": "cleanHTML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "Get many messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "cleanHTML",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reply to a message": {
      "main": [
        [
          {
            "node": "Get many messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ExtractLastMailResponse": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many messages": {
      "main": [
        [
          {
            "node": "ExtractLastMailResponse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get many messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Realizar Cambios": {
      "main": [
        [
          {
            "node": "formatText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formatDataForMeeting": {
      "main": [
        [
          {
            "node": "create_teams_meeting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "edit": {
      "main": [
        [
          {
            "node": "Reply to a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "formatText": {
      "main": [
        [
          {
            "node": "edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "approved": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Realizar Cambios",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "createUUID": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cleanHTML": {
      "main": [
        [
          {
            "node": "approved",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cleanHTML1": {
      "main": [
        [
          {
            "node": "createUUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create_teams_meeting": {
      "main": [
        [
          {
            "node": "PDF_CONVOCATORIA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF_CONVOCATORIA": {
      "main": [
        [
          {
            "node": "SAVE_METADATA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET_RESOLUTIONS": {
      "main": [
        [
          {
            "node": "formatDataForMeeting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "GET_RESOLUTIONS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "SAVE_METADATA": {
      "main": [
        [
          {
            "node": "GET_BINARY",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SEND_SECRETARY": {
      "main": [
        []
      ]
    },
    "GET_BINARY": {
      "main": [
        [
          {
            "node": "SEND_SECRETARY",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8d238cd1-bbb5-417c-ab2d-22d197b556f1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "54ec11882ca9b3e82b062f751bf5d6c4d986ec6ac834af1d71fe0dcbd9b6a5cf"
  },
  "id": "SLVqwK2jzeuGVdkf",
  "tags": [
    {
      "createdAt": "2025-09-19T21:36:18.579Z",
      "updatedAt": "2025-09-19T21:36:18.579Z",
      "id": "hIfCdV5CCo0ZPgJJ",
      "name": "MAIN"
    }
  ]
}