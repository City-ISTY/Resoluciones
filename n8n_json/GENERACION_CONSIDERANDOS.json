{
  "name": "GENERACION_CONSIDERANDOS",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1264,
        448
      ],
      "id": "2cc680c5-a913-4098-b107-dfb5cbf7141c",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "0Zr2gDUeSEg2Xe6E",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-embedding-001"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        -576,
        432
      ],
      "id": "bc43c81f-2048-4782-8be3-e90b24ad8dcf",
      "name": "Embeddings Google Gemini1",
      "credentials": {
        "googlePalmApi": {
          "id": "0Zr2gDUeSEg2Xe6E",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=RESOLUCION: \"{{ $('start').first().json.resolucion }}\"\nLEYES Y NORMATIVAS: ```\n-------------------------------------\n{{ $json.results.map((context,idx)=>{\n\nreturn (\"NUMERO ARTÍCULO:\"+context.metadata.articulo +\"\\n\"+\n\"EXTRAIDO DE: \"+context.metadata.document_name +\"\\n\"+\n\"LEY:\"+context.text +\"\\n\"+\n\"TITULO DEL ARTICULO:\"+context.metadata.titulo +\"\\n -----------------------------------------------\\n\"\n)\n}) }}```",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres un asistente experto en redacción de documentos oficiales para instituciones de educación superior en Ecuador, con amplio conocimiento de la Ley.\nOBJETIVO\n\tTu tarea es la de utilizar las normas para dar formato a considreandos formales para una resolución, para el Instituto Superior Tecnológico Yaruquí. \n\tPara ello recibirás dos elementos clave: *RESOLUCION* el cual es un parrafo que indica la desicion tomada por el Instituto, y *LEYES Y NORMATIVAS* \n\tlas cuales servirán como sustento legal para argumentar la resolución. \nINSTRUCCIONES:\n\t*Analizar la RESOLUCION: Lee atentamente la *Resolucion* para identificar la intención principal y los elementos centrales del tema.\n\t*Se te va a proporcionar un conjunto de leyes con esta estructura \n\t\tNUMERO ARTÍCULO: (Identifica al artículo)\n\t\tEXTRAIDO DE: (Es el nombre del documento, hace referencia a la norma de la cual se extrajo el artículo, usa este nombre del archivo para citar la ley)\n\t\tLEY:\n\t\tTITULO DEL ARTICULO:Ceremonia de Graduación\n\t*Analizar las LEYES Y NORMATIVAS: Revisa cada uno de las leyes proporcionadas. Identifica y extrae los artículos, estatutos o principios que justifican y dan fundamento a las decisiones que se redactan en la RESOLUCION.\n\t*Redactar la sección 'CONSIDERANDO': Utiliza las *LEYES Y NORMATIVAS* para elaborar los 'considerandos'. Cada considerando debe ser un párrafo que explique el marco legal o la razón de ser de la resolución, citando de manera exacta la ley.\n\t*Intenta utilizar la mayor cantidad de leyes, siempre y cuando la ley toque de alguna manera el tema de la resolución.\nFORMATO DE SALIDA: \n\tSolo devuelve JSON con el siguiente formato\n\t{\"considerandos\": \"aqui van los considerandos separados barra vertical (|)\"}\nFORMATO DE LOS CONSIDERANDOS: Cada considerando debe tener la siguiente estructura:\n\tFORMATO 1: Usalo en caso de que exista el numero de artículo, y el título\n\t\tQue, el artículo *NUMERO ARTÍCULO* del *EXTRAIDO DE* indica lo siguiente sobre *TITULO DEL ARTICULO*: \"*LEY*\"\n\tFORMATO 2: Usalo  en caso de no tener número de artículo.\n\t\tQue, el *EXTRAIDO DE* indica lo siguiente: \"*LEY*\"\nEXTRAE LA NORMA DEL NOMBRE DEL ARCHIVO. *EXTRAIDO DE* es un nombre de archivo, solo utilizalo para colocar ese nombre de la norma. no lo cites textualmente ya que el nombre del archivo normalmente viene con signos, extensiones de archivo, y no utilices mayusculas, formatealo correctamente como si citaras el nombre de la norma.\n\tejm: estatuto isty oct2024 v2 -> reestructuralo simplementa a \"Estatuto Isty\" capturando el nombre del estatuto o ley\n\t\n\tVARIACION DEL FORMATO: Analiza si vas a redactar un articulo, un anexo o una disposicion,etc, para que reformules la parte inicial del considerando ejm: si es un articulo iniciarias con \"que el articulo\", si es una disposicion: \"que la disposicion\", si no tiene nada, verifica el contenido para que puedar citar que tipo de ley es.\n",
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        704,
        256
      ],
      "id": "6c44a370-cfa7-4705-b632-678dbce7cc6d",
      "name": "GeneradorConsiderandos"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\n\nLee y comprende la resolución completa.\n\nIdentifica los aspectos jurídicos clave, tales como:\n\nLa materia de derecho involucrada (ej. derecho administrativo, derecho educativo, derecho constitucional).\n\nLos principios legales aplicables (ej. interés superior, igualdad, razonabilidad, legalidad).\n\nLos procedimientos y requisitos formales (ej. plazos, formalidades, competencia del órgano emisor).\n\nLos derechos y cargas de las partes involucradas.\n\nLos argumentos centrales de la decisión (ej. méritos, excepcionalidad, motivos de hecho y de derecho).\n\nLos posibles vacíos legales o conflictos normativos que la resolución intenta resolver.\n\nExpande la resolución en un resumen jurídico técnico y formal, detallando los puntos que requieren sustento legal.\n\nGenera preguntas de investigación legal: El objetivo principal es formular una lista de 10 a 15 preguntas específicas que un abogado se plantearía para fundamentar jurídicamente la decisión. Estas preguntas deben:\n\nSer autocontenidas y claras.\n\nCubrir la mayor cantidad de aspectos posibles de la resolución (sustantivos, procedimentales, principios, jurisprudencia).\n\nEstar redactadas para dirigir la búsqueda hacia normas, jurisprudencia y doctrina relevante.\n\nEvitar ser genéricas; deben estar directamente vinculadas a los hechos y argumentos del caso.\n\nIncluye preguntas de profundización (follow-ups): Formula 2-3 preguntas adicionales que surjan del análisis más profundo y que puedan ser necesarias para casos complejos o matices específicos.\n\nUsa terminología jurídica precisa.\n\nNo inventes leyes ni artículos que no existen.\n\nEl objetivo es que las preguntas sean el vehículo para explorar exhaustivamente el marco legal aplicable en un sistema RAG.\n\nEl lenguaje debe ser formal y estar orientado a abogados.\nEntrada:\n\"{{ $json.resolucion }}\"\n\n\n\nFORMATO DE SALIDA: \nSolo devuelve JSON con el siguiente formato\n{\"research_questions\": (Lista de strings) Las 7 preguntas de investigación legal SEPARADAS POR PUNTO Y COMA}\n\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres un asistente experto en derecho y en recuperación de información legal. \nTu tarea es analizar el texto completo de una resolución judicial o administrativa \ny transformarlo en un conjunto de preguntas útiles para encontrar \nartículos legales, jurisprudencia y doctrina que respalden jurídicamente la decisión."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -1216,
        256
      ],
      "id": "f114bf35-4a1b-4f13-8ba5-ad0df6e7d1ac",
      "name": "GeneradorTerminos"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"terminos_busqueda\": \"\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -1024,
        448
      ],
      "id": "b5d1c3df-ad63-405d-aba9-1cc8830ad14e",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3f28f526-5335-46c7-a450-f247d9a1356c",
              "name": "aaa",
              "value": "={{ $json.output.terminos_busqueda.split(\";\") }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -912,
        256
      ],
      "id": "dfb22449-414d-486f-9769-eeecb15b6263",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "aaa",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -752,
        256
      ],
      "id": "e48b54d1-286a-42b3-abac-a2db13233174",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "mode": "load",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "prompt": "={{ $json.aaa }}",
        "topK": 7,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        -576,
        256
      ],
      "id": "f54b0ed5-0597-4885-b936-3d121013f75a",
      "name": "obtenerReferencias",
      "credentials": {
        "supabaseApi": {
          "id": "7iDL76ggTML8vg0b",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        624,
        432
      ],
      "id": "4dce61a2-35b8-4c27-9ee5-1f3d5e0ddff0",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "0Zr2gDUeSEg2Xe6E",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\"considerandos\": \"\"}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        912,
        432
      ],
      "id": "c1b82616-aa66-4936-b0bc-654568f594be",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c43a18bc-599f-4dd2-b4da-2afd5f7dbb9f",
              "name": "considerandos",
              "value": "={{ $json.output.considerandos.split(\"|\") }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        256
      ],
      "id": "595471ed-a9a2-43ad-ab03-1731f4667a51",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "resolucion"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1424,
        256
      ],
      "id": "8c840e71-2e22-44d6-aecb-930146ecd3bd",
      "name": "start"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.1.199:8000/rerank",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "documents",
              "value": "={{ $json.documents }}"
            },
            {
              "name": "query",
              "value": "={{ $('start').first().json.resolucion }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        96,
        256
      ],
      "id": "9baeca0c-d9e7-47e1-b104-39a0aa9a366b",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.first().json.documentos;\n\nconst seen = new Set();\nconst documents = [];\n\nitems.forEach(item => {\n  const text = item.document.pageContent;\n  if (text && !seen.has(text)) {\n    seen.add(text);\n    documents.push(text);\n  }\n});\n\nreturn [{\n  json: {\n    documents\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        256
      ],
      "id": "5a0aaeda-35fa-48f7-820b-79e9208564c9",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\n// Objeto para trackear los pageContent únicos\nconst uniqueContents = {};\nconst uniqueItems = [];\n\nitems.forEach((item, index) => {\n  const content = item.json.document.pageContent;\n  if (!uniqueContents[content]) {\n    uniqueContents[content] = true;\n    uniqueItems.push(item.json);\n  }\n});\n\n// Ordenar por score descendente\nuniqueItems.sort((a, b) => b.score - a.score);\n\n// Asignar ID según la posición ordenada\nconst documentosConId = uniqueItems.map((item, index) => ({\n  id: index, // ID basado en la posición final\n  document: item.document,\n  score: item.score\n}));\n\nreturn [{ json: { documentos: documentosConId } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -256,
        256
      ],
      "id": "f46672de-6b35-42fb-891e-8d4d33621b3a",
      "name": "eliminar_duplicados"
    },
    {
      "parameters": {
        "jsCode": "// Habilitar \"Run Once for All Items\"\nconst results = items[0].json.results;\n\n// Primero filtrar los que tengan score mayor a 0.8\nconst filteredResults = results.filter(item => item.score > 0.07);\n$('eliminar_duplicados').first().json.documentos\n// Luego ordenar por score de mayor a menor (descendente)\nconst sortedResults = filteredResults.sort((a, b) => b.score - a.score);\n$('eliminar_duplicados').first().json.documentos[0].document.metadata\nreturn [{\n  json: {\n    results: sortedResults\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        272,
        256
      ],
      "id": "e7901e4a-9ba6-4ccb-a233-245858725523",
      "name": "ORDER_AND_FILTER"
    },
    {
      "parameters": {
        "jsCode": "const results = $input.first().json.results;\nconst documentos = $('eliminar_duplicados').first().json.documentos;\n\nfor (let result of results) {\n  for (let doc of documentos) {\n    // Asegúrate de que pageContent esté en el nivel correcto\n    const pageContent = doc.document?.pageContent;\n    if (result.text === pageContent) {\n      result.metadata = doc.document.metadata;\n      break; // Ya lo encontraste, no necesitas seguir buscando\n    }\n  }\n}\n\nreturn [{ json: { results } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        464,
        256
      ],
      "id": "dc7d4ae7-d644-4aef-8c30-c1d559b80042",
      "name": "GET_METADATA"
    }
  ],
  "pinData": {
    "start": [
      {
        "json": {
          "resolucion": "Revisión de la solicitud para el ingreso del estudiante Charles Felipe Estrella Vargas al proceso de titulación, mediante examen complexivo fuera del cronograma aprobado para la Titulación 2025-I, en base al oficio ISTY-VA-DEPC-055-2025"
        }
      }
    ]
  },
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "GeneradorTerminos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini1": {
      "ai_embedding": [
        [
          {
            "node": "obtenerReferencias",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "GeneradorTerminos": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "GeneradorTerminos",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "obtenerReferencias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtenerReferencias": {
      "main": [
        [
          {
            "node": "eliminar_duplicados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "GeneradorConsiderandos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "GeneradorConsiderandos",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "GeneradorConsiderandos": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "start": {
      "main": [
        [
          {
            "node": "GeneradorTerminos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "ORDER_AND_FILTER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "eliminar_duplicados": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ORDER_AND_FILTER": {
      "main": [
        [
          {
            "node": "GET_METADATA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET_METADATA": {
      "main": [
        [
          {
            "node": "GeneradorConsiderandos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a55d3bc0-8cd5-442e-9853-966208dde3d8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "54ec11882ca9b3e82b062f751bf5d6c4d986ec6ac834af1d71fe0dcbd9b6a5cf"
  },
  "id": "JZJV9dnowTeIoSYw",
  "tags": []
}